@page "/fetchdata"

<PageTitle>Weather forecast</PageTitle>

@using BlazorApp.Data
@inject WeatherForecastService ForecastService

<h1 data-automation-id="forecast-page-header">Weather forecast</h1>

<p data-automation-id="forecast-page-paragraph">This component demonstrates fetching data from a service.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table" data-automation-id="forecast-table">
        <thead>
            <tr>
                <th data-automation-id="table-header-date">Date</th>
                <th data-automation-id="table-header-temp-c">Temp. (C)</th>
                <th data-automation-id="table-header-temp-f">Temp. (F)</th>
                <th data-automation-id="table-header-summary">Summary</th>
            </tr>
        </thead>
        <tbody>
            @for (int i=0; i<forecasts.Length; i++)
            {
                var forecast = forecasts[i];
                <tr data-automation-id="table-row">
                    <td data-automation-id="table-cell">@forecast.Date.ToShortDateString()</td>
                    <td data-automation-id="table-cell">@forecast.TemperatureC</td>
                    <td data-automation-id="table-cell">@forecast.TemperatureF</td>
                    <td data-automation-id="table-cell">@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private WeatherForecast[]? forecasts;

    protected override async Task OnInitializedAsync()
    {
        forecasts = await ForecastService.GetForecastAsync(DateTime.Now);
    }
}
