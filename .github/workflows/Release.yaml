name: Release

on:
  push:
    tags:
      - 'release/*'
  workflow_dispatch:

jobs:
  build_application:
    runs-on: ubuntu-latest
    env:
      DOTNET_NOLOGO: true
    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
          include-prerelease: true
      - name: restore packages
        run: dotnet restore
      - name: build
        run: dotnet build -c Release --no-restore
      - name: Get version
        run: |
              export VER=$(grep -oP '\d+\.\d+\.\d+(?=</PackageVersion>)' Behavioral.Automation.Selenium/Behavioral.Automation/Behavioral.Automation.csproj)
              echo "VER=$VER" >> $GITHUB_ENV
              echo $VER
      - name: Package app
        run: |
          dotnet pack ./Behavioral.Automation.Selenium/Behavioral.Automation/Behavioral.Automation.csproj \
          --configuration Release /p:Platform=\"AnyCPU\" \
          /p:PackageVersion=${{ env.VER }} --output ./
      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ env.VER }}
          artifacts: "Behavioral.Automation.${{ env.VER }}.nupkg"
          bodyFile: "Behavioral.Automation.Selenium/CHANGELOG.md"
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish app into nuget.org
        env:
          NUGET_API_KEY: ${{ secrets.QUANTORI_NUGET_API_KEY }}
        run: |          
          output=$(dotnet nuget push ./Behavioral.Automation.${{ env.VER }}.nupkg -s "https://api.nuget.org/v3/index.json" -k "$NUGET_API_KEY" --skip-duplicate 2>&1) || exit_code=$?

          if [ -z "$exit_code" ]; then exit_code=0; fi

          echo "$output"
          echo "Exit Code: $exit_code"

          if echo "$output" | grep -q "403"; then
            echo "Error: NuGet API key is invalid or expired. Please contact Quantori support to renew the key. For more details, refer to the Quantori BDD Confluence page called 'Renew NuGet API key'."
            exit 1
          elif [ $exit_code -ne 0 ]; then
            echo "Error: dotnet nuget push failed with exit code $exit_code. Check the logs for more details."
            exit $exit_code
          else
            echo "Package successfully published to NuGet.org."
          fi
          